const CACHE_NAME="1.0.1",cacheFiles=["/","bundle.7a878b66e821b101d63e752c05524184.css","bundle.7a878b66e821b101d63e752c05524184.css.map","bundle.js","bundle.js.map","index.html","manifest.json","storybook","vendors~bundle.faf125a360ffc337c4bbd74ce4cf5826.css","vendors~bundle.faf125a360ffc337c4bbd74ce4cf5826.css.map","vendors~bundle.js","vendors~bundle.js.map"];self.addEventListener("install",function(a){console.log("installed",a),a.waitUntil(caches.open(CACHE_NAME).then(a=>{console.log("files are added"),a.addAll(cacheFiles).then(function(){return self.skipWaiting()})}))}),self.addEventListener("activate",function(a){return console.log("activated",a),a.waitUntil(caches.keys().then(a=>Promise.all(a.map(a=>a===CACHE_NAME?Promise.resolve():(console.log("deleting cache",a),caches.delete(a)))))),self.clients.claim()}),self.addEventListener("fetch",function(a){console.log("fetched",a),a.respondWith(caches.match(a.request).then(b=>{if(b)return b;const c=a.request.clone();return fetch(c).then(b=>{if(!b||200!==b.status||"basic"!==b.type)return b;const c=b.clone();return caches.open(CACHE_NAME).then(d=>(d.put(a.request,c),b))})}))});